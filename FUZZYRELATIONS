
import numpy as np

def max_min_composition(R, S):
  
    Computes the Max-Min composition of two fuzzy relations R and S.
    
    :param R: numpy array of shape (m, n) representing the first fuzzy relation
    :param S: numpy array of shape (n, p) representing the second fuzzy relation
    :return: numpy array of shape (m, p) representing the max-min composition of R and S
  
    if R.shape[1] 
        raise ValueError("Invalid dimensions: The number of columns in R must match the number of rows in S")
    
    m, n = R.shape
    p = S.shape[1]
    result = np.zeros((m, p))
    
    for i in range(m):
        for j in range(p):
            result[i, j] = np.max(np.minimum(R[i, :], S[:, j]))
    
    return result

# Example usage
R = np.array([[0.5, 0.2, 0.8],
              [0.1, 0.9, 0.7]])

S = np.array([[0.6, 0.3],
              [0.4, 0.7],
              [0.8, 0.5]])

composition = max_min_composition(R, S)
print("Max-Min Composition of R and S:")
print(composition)
